{"version":3,"sources":["logo.svg","pages/Business/Business.js","pages/Performs/Performs.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","Layout","Content","Footer","TextArea","Input","Option","Select","Business","props","componentDidMount","getPerformsIp","axios","post","then","res","console","log","setState","ServicesArray","data","info","state","catch","error","handleServices","value","selectBusiness","getServicesHost","bk_biz_id","ip","a","performsIp","exact","flag","HostArray","i","count","item","host","push","key","bk_host_id","IP","bk_host_innerip","SystemName","bk_os_name","HostName","bk_host_name","bk_cloud_id","id","Zone","bk_inst_name","Mem","Disk","CPU","isMonitor","includes","handleHost","ipList","length","split","handleHostPerforms","row","script_content","script_timeout","account","script_type","ip_list","result","performs","step_results","ip_logs","map","log_content","Date","newData","index","findIndex","handleIpList","target","handlePopConfirm","record","e","handlePopCancel","message","handleAddToMonitor","get","params","handleRemoveFromMonitor","columns","title","dataIndex","render","text","href","onConfirm","onCancel","okText","cancelText","type","className","onClick","theme","mode","defaultSelectedKeys","style","lineHeight","Item","to","padding","margin","maxWidth","justify","span","textAlign","marginRight","showSearch","width","placeholder","optionFilterProp","onChange","this","filterOption","input","option","children","toLowerCase","indexOf","bk_biz_name","marginTop","autosize","minRows","maxRows","icon","dataSource","React","Component","Performs","initPerformsEcharts","componentDidUpdate","echarts","init","document","getElementById","setOption","tooltip","trigger","legend","grid","left","right","bottom","containLabel","toolbox","feature","saveAsImage","xAxis","boundaryGap","category","yAxis","max","series","name","memData","diskData","cpuData","IpArray","getPerformsHistory","create_time","parseFloat","mem","replace","disk","cpu","handlePerforms","height","App","path","component","Boolean","window","location","hostname","match","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9ebb4f66.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import React from 'react'\r\nimport axios from 'axios'\r\nimport { Table, Icon, Button, Select, Input } from 'antd';\r\nimport { Layout, Menu, Breadcrumb } from 'antd';\r\nimport { Popconfirm, message } from 'antd';\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col } from 'antd';\r\nconst { Header, Content, Footer } = Layout;\r\nconst { TextArea } = Input;\r\n\r\n\r\nconst Option = Select.Option;\r\n\r\nclass Business extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            ipList: \"\",\r\n            ServicesArray: [],\r\n            performsIp: []\r\n        }\r\n\r\n        this.columns = [{\r\n            title: '内网IP',\r\n            dataIndex: 'IP',\r\n            key: 'IP',\r\n            render: text => <a href=\"#\">{text}</a>,\r\n        }, {\r\n            title: '系统名',\r\n            dataIndex: 'SystemName',\r\n            key: 'SystemName',\r\n        }, {\r\n            title: '主机名',\r\n            dataIndex: 'HostName',\r\n            key: 'HostName',\r\n        }, {\r\n            title: '云区域',\r\n            dataIndex: 'Zone',\r\n            key: 'Zone',\r\n        }, {\r\n            title: 'Mem(%)',\r\n            dataIndex: 'Mem',\r\n            key: 'Mem',\r\n        }, {\r\n            title: 'Disk(%)',\r\n            dataIndex: 'Disk',\r\n            key: 'Disk',\r\n        }, {\r\n            title: 'CPU(%)',\r\n            dataIndex: 'CPU',\r\n            key: 'CPU',\r\n        }, {\r\n            title: '操作',\r\n            key: 'action',\r\n            render: (text, record) => (\r\n                <span>\r\n                    <Popconfirm\r\n                        title=\"是否查询系统使用资源\"\r\n                        onConfirm={ () => this.handlePopConfirm(record)}\r\n                        onCancel={ () =>　this.handlePopCancel()}\r\n                        okText=\"OK\"\r\n                        cancelText=\"Cancel\"\r\n                    >\r\n                        <a href=\"#\"><Icon type=\"zoom-in\" /></a>\r\n                    </Popconfirm>\r\n                    <span className=\"ant-divider\" />\r\n                    <a href=\"#\" onClick={ () => record.isMonitor ? this.handleRemoveFromMonitor(record) : this.handleAddToMonitor(record)}>\r\n                        <Icon type={record.isMonitor ? \"delete\" : \"monitor\"} />\r\n                    </a>\r\n                </span>\r\n            ),\r\n        }];\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.getPerformsIp();\r\n        // 获取业务信息\r\n        axios.post('/t/wyapp/t/api/get_business_info', {\r\n            \"fields\": [\r\n                \"bk_biz_id\",\r\n                \"bk_biz_name\"\r\n            ]\r\n        })\r\n            .then((res) => {\r\n                console.log(res);\r\n                this.setState({\r\n                    ServicesArray: res.data.data.info\r\n                });\r\n                console.log('aaa:', this.state.ServicesArray);\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n\r\n        console.log(this.ServicesArray);\r\n\r\n    };\r\n\r\n    handleServices = (value) => {\r\n        this.setState({\r\n            selectBusiness: value\r\n        })\r\n        console.log(`selected ${value}`);\r\n        // 选择业务后触发获取业务主机信息\r\n        this.getServicesHost(value);\r\n    }\r\n\r\n    // 获取业务的主机信息\r\n    getServicesHost = async (bk_biz_id, ip) => {\r\n        await this.getPerformsIp();\r\n        console.log('performsIp-host:', this.state.performsIp);\r\n\r\n        axios.post('/t/wyapp/t/api/get_host_info', {\r\n            bk_biz_id: bk_biz_id,\r\n            ip: {\r\n                data: ip ? ip : [],\r\n                exact: 0,\r\n                flag: \"bk_host_innerip\"\r\n            },\r\n        })\r\n            .then((res) => {\r\n                const HostArray = [];\r\n                for (let i = 0; i < res.data.data.count; i++) {\r\n                    let item = res.data.data.info[i].host;\r\n                    HostArray.push({\r\n                        key: item.bk_host_id,\r\n                        IP: item.bk_host_innerip,\r\n                        SystemName: item.bk_os_name,\r\n                        HostName: item.bk_host_name,\r\n                        bk_cloud_id: item.bk_cloud_id ? item.bk_cloud_id[0].id : null,\r\n                        Zone: item.bk_cloud_id ? item.bk_cloud_id[0].bk_inst_name : null,\r\n                        Mem: '--',\r\n                        Disk: '--',\r\n                        CPU: '--',\r\n                        isMonitor: this.state.performsIp.includes(item.bk_host_innerip)\r\n                    })\r\n                    console.log('s-p:',  this.state.performsIp);\r\n                    console.log('i-ip:', item.bk_host_innerip);\r\n                }\r\n                this.setState({\r\n                    HostArray: HostArray\r\n                })\r\n                console.log('hostArray:',HostArray);\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    handleHost = () => {\r\n        const ip = this.state.ipList.length > 0 ? this.state.ipList.split('\\n') : null;\r\n        console.log('ip：', ip);\r\n        this.getServicesHost(this.state.selectBusiness, ip)\r\n        console.log('value:', this.state.ipList);\r\n    }\r\n\r\n    // 查询主机的性能数据(内存、磁盘、CPU使用率)\r\n    handleHostPerforms = (row) => {\r\n        axios.post('/t/wyapp/t/api/get_host_performs', {\r\n                bk_biz_id: row.bk_biz_id,\r\n                script_content: 'IyEvYmluL2Jhc2gKTUVNT1JZPSQoZnJlZSAtbSB8IGF3ayAnTlI9PTJ7cHJpbnRmICIlLjJmJSUiLCAkMyoxMDAvJDJ9JykKRElTSz0kKGRmIC1oIHwgYXdrICckTkY9PSIvIntwcmludGYgIiVzIiwgJDV9JykKQ1BVPSQodG9wIC1ibjEgfCBncmVwIGxvYWQgfCBhd2sgJ3twcmludGYgIiUuMmYlJSIsICQoTkYtMil9JykKREFURT0kKGRhdGUgIislWS0lbS0lZCAlSDolTTolUyIpCmVjaG8gLWUgIiREQVRFfCRNRU1PUll8JERJU0t8JENQVSI=',\r\n                script_timeout: 1000,\r\n                account: 'root',\r\n                script_type: 1,\r\n                ip_list: [\r\n                    {\r\n                        bk_cloud_id: row.bk_cloud_id,\r\n                        ip: row.IP\r\n                    }\r\n                ]\r\n        }).then((res) => {\r\n            if (res.data.result) {\r\n                console.log('run_performs:', res);\r\n                const results = res.data.data[0].step_results[0].ip_logs;\r\n                const logs = results.map((item) => {\r\n                    return {\r\n                        bk_cloud_id: item.bk_cloud_id,\r\n                        ip: item.ip,\r\n                        log_content: item.log_content\r\n                    }\r\n                })\r\n                // 分割内容\r\n                const performs = logs.map((item) => {\r\n                    const performs = item.log_content.split('|');\r\n                    return {\r\n                        Date: performs[0],\r\n                        Mem: performs[1],\r\n                        Disk: performs[2],\r\n                        CPU: performs[3]\r\n                    }\r\n                });\r\n                console.log('performs:', performs);\r\n                // 更新表格内容\r\n                const newData = [...this.state.HostArray];\r\n                const index = newData.findIndex(item => row.key == item.key);\r\n                newData[index].Mem = performs[0].Mem;\r\n                newData[index].Disk = performs[0].Disk;\r\n                newData[index].CPU = performs[0].CPU;\r\n                this.setState({ HostArray: newData });\r\n            }\r\n        })\r\n    }\r\n\r\n    handleIpList = ({ target: { value }} ) => {\r\n        this.setState({\r\n            ipList: value\r\n        })\r\n    }\r\n\r\n    handlePopConfirm = (record, e) => {\r\n        this.handleHostPerforms(record);\r\n      }\r\n      \r\n    handlePopCancel = (e) => {\r\n        message.error('取消查询系统使用资源');\r\n    }\r\n\r\n    // 将主机加入性能监控\r\n    handleAddToMonitor = (record) => {\r\n        axios.get('/t/wyapp/t/api/add_host_performs', {\r\n            params: {\r\n                ip: record.IP,\r\n                bk_biz_id: this.state.selectBusiness,\r\n                bk_cloud_id: record.bk_cloud_id\r\n            }\r\n        }).then((res) => {\r\n            console.log(res);\r\n            // 更新表格内容\r\n            const newData = [...this.state.HostArray];\r\n            const index = newData.findIndex(item => record.key == item.key);\r\n            newData[index].isMonitor = true;\r\n            this.setState({ HostArray: newData });\r\n        })\r\n    }\r\n\r\n    // 将主机从性能监控中移除\r\n    handleRemoveFromMonitor = (record) => {\r\n        console.log('remove');\r\n        axios.get('/t/wyapp/t/api/remove_host_performs', {\r\n            params: {\r\n                ip: record.IP,\r\n            }\r\n        }).then((res) => {\r\n            console.log(res);\r\n            // 更新表格内容\r\n            const newData = [...this.state.HostArray];\r\n            const index = newData.findIndex(item => record.key == item.key);\r\n            newData[index].isMonitor = false;\r\n            this.setState({ HostArray: newData });\r\n        })\r\n    }\r\n\r\n    // 获取正在监控的主机IP\r\n    getPerformsIp = () => {\r\n        axios.get('/t/wyapp/t/api/get_host_performs_ip').then((res) => {\r\n            if (res.data.result) {\r\n                this.setState({\r\n                    performsIp: res.data.data\r\n                })\r\n            }\r\n            console.log('ip-p:', this.state.performsIp)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Layout className=\"layout\">\r\n                    <Header>\r\n                        <div className=\"logo\" />\r\n                        <Menu\r\n                            theme=\"dark\"\r\n                            mode=\"horizontal\"\r\n                            defaultSelectedKeys={['1']}\r\n                            style={{ lineHeight: '64px' }}\r\n                        >\r\n                            <Menu.Item key=\"1\">\r\n                                <Link to=\"#\">主机查询</Link>\r\n                            </Menu.Item>\r\n                            <Menu.Item key=\"2\">\r\n                                <Link to=\"/performs\">性能监控</Link>\r\n                            </Menu.Item>\r\n                        </Menu>\r\n                    </Header>\r\n                    <Content style={{ padding: '0 50px' }}>\r\n                        <div style={{ margin: '20px auto', maxWidth: '400px' }}>\r\n                            <Row type=\"flex\" justify=\"start\">\r\n                                <Col span={6} style={{textAlign: 'left'}}>\r\n                                    <span style={{ marginRight: '10px'}}>\r\n                                        请选择业务:\r\n                                    </span>\r\n                                </Col>\r\n                                <Col span={18}>\r\n                                    <Select\r\n                                        showSearch\r\n                                        style={{ width: '100%' }}\r\n                                        placeholder=\"选择一个业务\"\r\n                                        optionFilterProp=\"children\"\r\n                                        onChange={this.handleServices}\r\n                                        filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                                    >\r\n                                        {\r\n                                            this.state.ServicesArray.map((item) => {\r\n                                                return <Option key={item.bk_biz_id} value={item.bk_biz_id}>{item.bk_biz_name}</Option>\r\n                                            })\r\n                                        }\r\n                                    </Select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row type=\"flex\" justify=\"start\" style={{marginTop:'10px'}}>\r\n                                <Col span={6} style={{textAlign: 'left'}}>\r\n                                    <span style={{ marginRight: '10px'}}>\r\n                                        请输入主机IP:\r\n                                    </span>\r\n                                </Col>\r\n                                <Col span={18}>\r\n                                    <TextArea\r\n                                        onChange={this.handleIpList}\r\n                                        placeholder=\"请输入主机IP,多个IP用回车分割\"\r\n                                        autosize={{ minRows: 2, maxRows: 6 }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <div style={{ margin: '8px 0' }}>\r\n                                <Button type=\"primary\" icon=\"search\" onClick={this.handleHost}>查询</Button>\r\n                            </div>\r\n                        </div>\r\n                        <Table columns={this.columns} dataSource={this.state.HostArray} />;\r\n                    </Content>\r\n                    <Footer style={{ textAlign: 'center' }}>\r\n                        Ant Design ©2016 Created by Ant UED\r\n                    </Footer>\r\n                </Layout>\r\n\r\n            </div >\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default Business;\r\n\r\n","\r\n\r\nimport React from 'react'\r\nimport axios from 'axios'\r\nimport { Layout, Menu, Breadcrumb } from 'antd';\r\nimport { Select } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\n// 引入 ECharts 主模块\r\nimport echarts from 'echarts/lib/echarts';\r\n// 引入折线图\r\nimport 'echarts/lib/chart/line'\r\n// 引入提示框和标题组件\r\nimport 'echarts/lib/component/tooltip';\r\nimport 'echarts/lib/component/title';\r\n\r\nconst { Header, Content, Footer } = Layout;\r\nconst Option = Select.Option;\r\n\r\n\r\nclass Performs extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            IpArray: [],\r\n            performs: {\r\n                category: [],\r\n                memData: [],\r\n                diskData: [],\r\n                cpuData: []\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.getPerformsIp();\r\n        this.initPerformsEcharts();\r\n    }\r\n\r\n    componentDidUpdate = () => {\r\n        this.initPerformsEcharts();\r\n    }\r\n\r\n    initPerformsEcharts = () => {\r\n        // 基于准备好的dom，初始化echarts实例\r\n        var myChart = echarts.init(document.getElementById('main'));\r\n        // 绘制图表\r\n        myChart.setOption({\r\n            title: {\r\n                text: '主机性能曲线图'\r\n            },\r\n            tooltip: {\r\n                trigger: 'axis'\r\n            },\r\n            legend: {\r\n                data: ['内存使用率', '磁盘使用率', 'CPU使用率']\r\n            },\r\n            grid: {\r\n                left: '3%',\r\n                right: '4%',\r\n                bottom: '3%',\r\n                containLabel: true\r\n            },\r\n            toolbox: {\r\n                feature: {\r\n                    saveAsImage: {}\r\n                }\r\n            },\r\n            xAxis: {\r\n                type: 'category',\r\n                boundaryGap: false,\r\n                data: this.state.performs.category\r\n            },\r\n            yAxis: {\r\n                type: 'value',\r\n                max: 100\r\n            },\r\n            series: [\r\n                {\r\n                    name: '内存使用率',\r\n                    type: 'line',\r\n                    data: this.state.performs.memData\r\n                },\r\n                {\r\n                    name: '磁盘使用率',\r\n                    type: 'line',\r\n                    data: this.state.performs.diskData\r\n                },\r\n                {\r\n                    name: 'CPU使用率',\r\n                    type: 'line',\r\n                    data: this.state.performs.cpuData\r\n                },\r\n            ]\r\n        });\r\n    }\r\n\r\n    getPerformsIp = () => {\r\n        axios.get('/t/wyapp/t/api/get_host_performs_ip').then((res) => {\r\n            if (res.data.result) {\r\n                this.setState({\r\n                    IpArray: res.data.data\r\n                })\r\n            }\r\n            console.log('ip:', this.state.IpArray)\r\n        })\r\n    }\r\n\r\n    getPerformsHistory = (ip) => {\r\n        axios.get('/t/wyapp/t/api/get_host_performs_history', {\r\n            params: {\r\n                ip: ip ? ip : null\r\n            }\r\n        }).then((res) => {\r\n            console.log(res);\r\n            if (res.data.result) {\r\n                let category = [];\r\n                let memData = [];\r\n                let diskData = [];\r\n                let cpuData = [];\r\n                console.log('aaa:', res);\r\n                res.data.data.map((item) => {\r\n                    category.push(item.create_time);\r\n                    memData.push(parseFloat(item.mem.replace(/[^\\d.]/g, '')));\r\n                    diskData.push(parseFloat(item.disk.replace(/[^\\d.]/g, '')));\r\n                    cpuData.push(parseFloat(item.cpu.replace(/[^\\d.]/g, '')));\r\n                })\r\n                console.log('category:', category);\r\n                console.log('mem:', memData);\r\n                console.log('disk', diskData);\r\n                console.log('cpu:', cpuData);\r\n                this.setState({\r\n                    performs: {\r\n                        category: category,\r\n                        memData: memData,\r\n                        diskData: diskData,\r\n                        cpuData: cpuData\r\n                    }\r\n                })\r\n                console.log('performs:',this.state.performs);\r\n            }\r\n        })\r\n    }\r\n\r\n    handlePerforms = (value) => {\r\n        this.getPerformsHistory(value);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div>\r\n                <Layout className=\"layout\">\r\n                    <Header>\r\n                        <div className=\"logo\" />\r\n                        <Menu\r\n                            theme=\"dark\"\r\n                            mode=\"horizontal\"\r\n                            defaultSelectedKeys={['2']}\r\n                            style={{ lineHeight: '64px' }}\r\n                        >\r\n                            <Menu.Item key=\"1\">\r\n                                <Link to=\"/\">主机查询</Link>\r\n                            </Menu.Item>\r\n                            <Menu.Item key=\"2\">\r\n                                <Link to=\"#\">性能监控</Link>\r\n                            </Menu.Item>\r\n                        </Menu>\r\n                    </Header>\r\n                    <Content style={{ padding: '0 50px' }}>\r\n                        <div style={{ margin: '20px auto', maxWidth: '400px' }}>\r\n                            <div style={{ textAlign: 'left' }}>\r\n                                <span style={{ marginRight: '10px' }}>\r\n                                    请选择主机:\r\n                                </span>\r\n                                <Select\r\n                                    showSearch\r\n                                    style={{ width: 200 }}\r\n                                    placeholder=\"请选择一个主机进行展示\"\r\n                                    optionFilterProp=\"children\"\r\n                                    onChange={this.handlePerforms}\r\n                                    filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                                >\r\n                                    {\r\n                                        this.state.IpArray.map((item, index) => {\r\n                                            return <Option key={index} value={item}>{item}</Option>\r\n                                        })\r\n                                    }\r\n                                </Select>\r\n                            </div>\r\n                        </div>\r\n                        <div id=\"main\" style={{ margin: '20px auto', width: 1000, height: 400 }}></div>\r\n                    </Content>\r\n                    <Footer style={{ textAlign: 'center' }}>\r\n                        Ant Design ©2016 Created by Ant UED\r\n                    </Footer>\r\n                </Layout>\r\n\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Performs;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { HashRouter as Router, Route} from 'react-router-dom';\nimport Business from './pages/Business/Business'\nimport Performs from './pages/Performs/Performs'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/* <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header> */}\n      <div className=\"container\">\n        {/* <Business /> */}\n        <Router >\n          <div>\n            <Route exact path=\"/\" component={Business} />\n            <Route path=\"/performs\" component={Performs} />\n          </div>\n        </Router>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}